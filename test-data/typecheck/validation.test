[CASE serializer_to_representation_returns_typeddict_of_fields]
from rest_framework import serializers

class MySerializer(serializers.Serializer):
    name = serializers.CharField()

szr = MySerializer()
instance = object()
reveal_type(szr.to_representation(instance))  # E: Revealed type is 'TypedDict('builtins.object', {'name': builtins.str})'
[/CASE]

[CASE list_serializer_to_representation_returns_list_of_typeddicts]
from rest_framework import serializers

class MySerializer(serializers.Serializer):
    name = serializers.CharField()
class MyListSerializer(serializers.ListSerializer):
    child = MySerializer()

list_szr = MyListSerializer()
instance = object()
reveal_type(list_szr.to_representation(instance))  # E: Revealed type is 'builtins.list[TypedDict('builtins.object', {'name': builtins.str})]'
[/CASE]